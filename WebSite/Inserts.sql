INSERT INTO `role` (`id`, `role_name`) VALUES
(1, 'Admin');

INSERT INTO `languages` (`id`, `language`) VALUES
(1, 'JAVA'),
(2, 'C++'),
(3, 'VB.NET'),
(4, 'CSharp'),
(5, 'Ruby'),
(6, 'PHP'),
(7, 'Plain Text');

INSERT INTO `language_extensions` (`language_id`, `extension`) VALUES
(1, 'JAVA'),
(2, 'CPP'),
(2, 'H'),
(2, 'C');


INSERT INTO `tokens` (`language_id`, `token_id`, `token_name`) VALUES
(2, 4, 'asm'),
(2, 5, 'and'),
(2, 6, 'and_eq'),
(2, 7, 'auto'),
(2, 8, 'bitand'),
(2, 9, 'bitor'),
(2, 10, 'bool'),
(2, 11, 'break'),
(2, 12, 'case'),
(2, 13, 'catch'),
(2, 14, 'char'),
(2, 15, 'class'),
(2, 16, 'compl'),
(2, 17, 'const'),
(2, 18, 'const_cast'),
(2, 19, 'continue'),
(2, 20, 'cout'),
(2, 21, 'cin'),
(2, 22, 'default'),
(2, 23, 'define'),
(2, 24, 'delete'),
(2, 25, 'do'),
(2, 26, 'double'),
(2, 27, 'dynamic_cas'),
(2, 28, 'else'),
(2, 29, 'elif'),
(2, 30, 'endif'),
(2, 31, 'endl'),
(2, 32, 'enum'),
(2, 33, 'error'),
(2, 34, 'exit'),
(2, 35, 'explicit'),
(2, 36, 'extern'),
(2, 37, 'false'),
(2, 38, 'float'),
(2, 39, 'for'),
(2, 40, 'friend'),
(2, 41, 'goto'),
(2, 42, 'if'),
(2, 43, 'ifdef'),
(2, 44, 'ifndef'),
(2, 45, 'include'),
(2, 46, 'inline'),
(2, 47, 'int'),
(2, 48, 'long'),
(2, 49, 'line'),
(2, 50, 'mutable'),
(2, 51, 'namespace'),
(2, 52, 'new'),
(2, 53, 'not'),
(2, 54, 'not_eq'),
(2, 55, 'operator'),
(2, 56, 'or'),
(2, 57, 'or_eq'),
(2, 58, 'pragma'),
(2, 59, 'private'),
(2, 61, 'public'),
(2, 62, 'register'),
(2, 63, 'reinterpret'),
(2, 64, 'return'),
(2, 65, 'short'),
(2, 66, 'signed'),
(2, 67, 'sizeof'),
(2, 68, 'static'),
(2, 69, 'static_cast'),
(2, 70, 'struct'),
(2, 71, 'string'),
(2, 72, 'switch'),
(2, 73, 'template'),
(2, 74, 'this'),
(2, 75, 'throw'),
(2, 76, 'true'),
(2, 77, 'try'),
(2, 78, 'typedef'),
(2, 79, 'typename'),
(2, 80, 'undef'),
(2, 81, 'union'),
(2, 82, 'unsigned'),
(2, 83, 'using'),
(2, 84, 'virtual'),
(2, 85, 'void'),
(2, 86, 'volatile'),
(2, 87, 'warning'),
(2, 88, 'wchar_t'),
(2, 89, 'while'),
(2, 90, 'xor'),
(2, 91, 'xor_eq'),
(2, 92, '?'),
(2, 93, '('),
(2, 94, ')'),
(2, 95, '['),
(2, 96, ']'),
(2, 97, '{'),
(2, 98, '}'),
(2, 99, ':'),
(2, 100, ''),
(2, 101, '='),
(2, 102, '=='),
(2, 103, '!'),
(2, 104, '~'),
(2, 105, '!='),
(2, 106, '/'),
(2, 107, '/='),
(2, 108, '#'),
(2, 109, '+'),
(2, 110, '+='),
(2, 111, '++'),
(2, 112, '-'),
(2, 113, '-='),
(2, 114, '--'),
(2, 115, '*'),
(2, 116, '*='),
(2, 117, '%'),
(2, 118, '%='),
(2, 119, '>>'),
(2, 120, '>>='),
(2, 121, '>='),
(2, 122, '>'),
(2, 123, '<<'),
(2, 124, '<<='),
(2, 125, '<='),
(2, 126, '<'),
(2, 127, '^'),
(2, 128, '^='),
(2, 129, '|'),
(2, 130, '|='),
(2, 131, '||'),
(2, 132, '&'),
(2, 133, '&='),
(2, 134, '&&'),
(2, 135, ';'),
(2, 136, '->'),
(2, 137, '->*'),
(2, 138, '.*'),
(2, 139, '::'),
(2, 140, 'WHITE SPACE'),
(2, 141, 'COMMENT'),
(2, 142, 'CPP COMMENT'),
(2, 143, 'CHARACTER L'),
(2, 144, 'STRING LITE'),
(2, 145, 'ESCAPE'),
(2, 146, 'VOCABULARY'),
(2, 147, 'IDENTIFIER'),
(2, 148, 'INTEGER NUM'),
(2, 149, 'EXPONENT'),
(2, 150, 'FLOAT SUFFI'),
(2, 151, 'LONG SUFFIX'),
(2, 152, 'UNSIGNED SU'),
(1, 4, 'asm'),
(1, 5, 'and'),
(1, 6, 'and_eq'),
(1, 7, 'auto'),
(1, 8, 'bitand'),
(1, 9, 'bitor'),
(1, 10, 'bool'),
(1, 11, 'break'),
(1, 12, 'case'),
(1, 13, 'catch'),
(1, 14, 'char'),
(1, 15, 'class'),
(1, 16, 'compl'),
(1, 17, 'const'),
(1, 18, 'const_cast'),
(1, 19, 'continue'),
(1, 20, 'cout'),
(1, 21, 'cin'),
(1, 22, 'default'),
(1, 23, 'define'),
(1, 24, 'delete'),
(1, 25, 'do'),
(1, 26, 'double'),
(1, 27, 'dynamic_cas'),
(1, 28, 'else'),
(1, 29, 'elif'),
(1, 30, 'endif'),
(1, 31, 'endl'),
(1, 32, 'enum'),
(1, 33, 'error'),
(1, 34, 'exit'),
(1, 35, 'explicit'),
(1, 36, 'extern'),
(1, 37, 'false'),
(1, 38, 'float'),
(1, 39, 'for'),
(1, 40, 'friend'),
(1, 41, 'goto'),
(1, 42, 'if'),
(1, 43, 'ifdef'),
(1, 44, 'ifndef'),
(1, 45, 'include'),
(1, 46, 'inline'),
(1, 47, 'int'),
(1, 48, 'long'),
(1, 49, 'line'),
(1, 50, 'mutable'),
(1, 51, 'namespace'),
(1, 52, 'new'),
(1, 53, 'not'),
(1, 54, 'not_eq'),
(1, 55, 'operator'),
(1, 56, 'or'),
(1, 57, 'or_eq'),
(1, 58, 'pragma'),
(1, 59, 'private'),
(1, 60, 'protected'),
(1, 61, 'public'),
(1, 62, 'register'),
(1, 63, 'reinterpret'),
(1, 64, 'return'),
(1, 65, 'short'),
(1, 66, 'signed'),
(1, 67, 'sizeof'),
(1, 68, 'static'),
(1, 69, 'static_cast'),
(1, 70, 'struct'),
(1, 71, 'string'),
(1, 72, 'switch'),
(1, 73, 'template'),
(1, 74, 'this'),
(1, 75, 'throw'),
(1, 76, 'true'),
(1, 77, 'try'),
(1, 78, 'typedef'),
(1, 79, 'typename'),
(1, 80, 'undef'),
(1, 81, 'union'),
(1, 82, 'unsigned'),
(1, 83, 'using'),
(1, 84, 'virtual'),
(1, 85, 'void'),
(1, 86, 'volatile'),
(1, 87, 'warning'),
(1, 88, 'wchar_t'),
(1, 89, 'while'),
(1, 90, 'xor'),
(1, 91, 'xor_eq'),
(1, 92, '?'),
(1, 93, '('),
(1, 94, ')'),
(1, 95, '['),
(1, 96, ']'),
(1, 97, '{'),
(1, 98, '}'),
(1, 99, ':'),
(1, 100, ''),
(1, 101, '='),
(1, 102, '=='),
(1, 103, '!'),
(1, 104, '~'),
(1, 105, '!='),
(1, 106, '/'),
(1, 107, '/='),
(1, 108, '#'),
(1, 109, '+'),
(1, 110, '+='),
(1, 111, '++'),
(1, 112, '-'),
(1, 113, '-='),
(1, 114, '--'),
(1, 115, '*'),
(1, 116, '*='),
(1, 117, '%'),
(1, 118, '%='),
(1, 119, '>>'),
(1, 120, '>>='),
(1, 121, '>='),
(1, 122, '>'),
(1, 123, '<<'),
(1, 124, '<<='),
(1, 125, '<='),
(1, 126, '<'),
(1, 127, '^'),
(1, 128, '^='),
(1, 129, '|'),
(1, 130, '|='),
(1, 131, '||'),
(1, 132, '&'),
(1, 133, '&='),
(1, 134, '&&'),
(1, 135, ';'),
(1, 136, '->'),
(1, 137, '->*'),
(1, 138, '.*'),
(1, 139, '::'),
(1, 140, 'WHITE SPACE'),
(1, 141, 'COMMENT'),
(1, 142, 'CPP COMMENT'),
(1, 143, 'CHARACTER L'),
(1, 144, 'STRING LITE'),
(1, 145, 'ESCAPE'),
(1, 146, 'VOCABULARY'),
(1, 147, 'IDENTIFIER'),
(1, 148, 'INTEGER NUM'),
(1, 149, 'EXPONENT'),
(1, 150, 'FLOAT SUFFI'),
(1, 151, 'LONG SUFFIX'),
(1, 152, 'UNSIGNED SU');